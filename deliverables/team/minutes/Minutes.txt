Saturday, Sept 23, 13:00-13:55
- Partner explained in greater depth the goals of QEYnet and how the team's project fits in
- Project will be a local GUI application with local file I/O
- Partner shared example types of data that will be processed by the project
- For the project, functionality and usability are to be prioritized over visual aesthetics
- Team will be working in the team repository, not a repository of QEYnet
- Partner will be providing support regarding the requirements of the project, but not regarding the code of the project
- Team may make source code public after the completion of the project
- The team repository is to be kept private until the completion of the project, as the code may contain confidential information that will need to be removed before public release
- Project Expectations and Code of Conduct document was brought up, but not explicitly reviewed
- To do: set up a file-sharing hub for the project separate from source control
- Next meeting: Tue, Sept 26, 18:30 to evaluate an initial mockup for the project design
- Schedule for regular meetings will be determined in the next meeting

Tuesday, Sept 26, 18:30-19:20
- Team presented initial mockups to the partner
- Team presented initial user stories to the partner â€“ to be revised and presented again approval before the D1 deadline
- Team asked clarifying questions about the project
- Partner presented and explained an example configuration file for the project
- Regular meetings will occur every Monday at 11:00 (decided shortly before the meeting)

Monday, Oct 2, 16:10-16:50
- Team presented updated mockups to partner
- Team asked clarifying questions about the project
- Partner clarified: no need to deal with persistence of telemetry data at this stage
- Partner clarified: "Table View" is not a high-priority feature for the program
- Partner requested: alarms in the dashboard should be filterable
- Partner clarified: graphing will occur for one parameter at a time
- Team TODO: start discussing the architecture of the project
- After meeting, team made updated mockups available for download to the partner
- After meeting, partner made available drawn feedback on the team's updated mockups

Monday, Oct 9, 11:00-12:10
- Team presented initial architecture to partner
  - Team TODO: update UML diagram to distinguish files from in-memory data
  - Team TODO: separate telemetry file reading from appending to telemetry data
  - Team TODO: create visual groupings for sets of modules
    - Module groups should have high cohesion
    - There should be low coupling between different groups
  - Team TODO: separate telemetry configuration from user settings
  - Team TODO: separate alarm checking from alarm display
- Team asked clarifying questions about the project
  - Clarified: Project must incorporate error handling, but the specifics are up to the team
  - Clarified: It can be assumed that there exists a specified interface such that all valid configuration files can be parsed into an object that satisfies this interface
  - Clarified: User settings can be read from and written to files
  - Clarified: Python version can be either 3.11 or 3.12 (up to the team to decide)
- Partner requested: feature for switching devices (not high-priority)
- Partner expressed concerns about the team's progress, especially its progress with the mockups and architecture
  - After meeting, team communicated with the partner to resolve this issue
    - Team will largely stick to its original plans for Deliverable 2
    - Team will create and present updated mockups to partner by Wednesday
    - Team will complete and get approval for mockups and architecture before working on any code past Deliverable 2

Wednesday, Oct 18, 14:00-15:05
- Notified: Deliverable 2 has been completed 2 days behind schedule
- Partner presented Panoptes, a configuration/telemetry file generation tool (was earlier provided for download without presentation)
- Clarified: primary priorities for the team are telemetry, alarms, and plotting
- Shortly after meeting, partner shared paper on alarm management
- Various points about the project clarified:
  - On scale:
    - Each device will have 1000-10000 tags
    - Team can consider reading in telemetry files on demand
  - State of alarms should be communicated in a more prominent way
  - There is a difference between acknowledging an alarm and resolving it
  - Plotting should support multiple parameters -- there are ways to handle the problem of differing axis scales
  - There should not be duplicate timestamps for a device
  - Configuration files will give info on available devices
  - File extension is likely OK to rely on for determining file format

Monday, Oct 23, 11:00-12:10
- Reaffirmed: at minimum, scope for the project is Telemetry, Alarms, Graphing
- Team presented revised mockups to partner representative, and got early feedback; more feedback to come from partner organization
- Team asked clarifying questions
- REQUIREMENT: The program must be robust, given plans for sessions to last for years at a time in the future
- Discussed details of telemetry file reading
- Discussed checking for rate of change alarms -- to be researched further by the team
- Discussed details for alarms in general
  - Terminology: alarms in the application should be closed, not resolved
  - No need to worry about time elasped since alarm ring-in vs "time left to address alarm"
- Clarified: static alarms specifically target _no change_, not merely low amounts of change
- Code style is not strict, but deviations must have good justifications behind them
- After meeeting: further discussion on how to represent logical alarms

Monday, Oct 30, 11:00-11:50
- General updates on progress
- Team clarified subteam divisions
- Partner presented updates to configuration files
- New version of Panoptes to be released soon; will be the final version for the team barring exceptional circumstances
- Next meeting: Tuesday, Nov 7, 11:00
